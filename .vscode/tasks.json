// .vscode/tasks.json
{
    "version": "2.0.0",
    "tasks": [
        {
            "label": "Maven: Clean",
            "type": "shell",
            "command": "mvn",
            "args": ["clean"],
            "group": "build",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "shared",
                "showReuseMessage": true,
                "clear": false
            },
            "problemMatcher": []
        },
        {
            "label": "Maven: Compile",
            "type": "shell",
            "command": "mvn",
            "args": ["compile"],
            "group": {
                "kind": "build",
                "isDefault": true
            },
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "shared"
            },
            "problemMatcher": ["$java"]
        },
        {
            "label": "Maven: Test",
            "type": "shell",
            "command": "mvn",
            "args": ["test"],
            "group": "test",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "shared"
            },
            "problemMatcher": ["$java"]
        },
        {
            "label": "Maven: Package",
            "type": "shell",
            "command": "mvn",
            "args": ["package", "-DskipTests"],
            "group": "build",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "shared"
            },
            "problemMatcher": ["$java"]
        },
        {
            "label": "Spring Boot: Run Dev",
            "type": "shell",
            "command": "mvn",
            "args": ["spring-boot:run", "-Dspring-boot.run.profiles=dev"],
            "group": "build",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "shared"
            },
            "problemMatcher": ["$java"],
            "isBackground": true
        },
        {
            "label": "Spring Boot: Run Prod",
            "type": "shell",
            "command": "mvn",
            "args": ["spring-boot:run", "-Dspring-boot.run.profiles=prod"],
            "group": "build",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "shared"
            },
            "problemMatcher": ["$java"],
            "isBackground": true
        },
        {
            "label": "Docker: Build",
            "type": "shell",
            "command": "docker",
            "args": ["build", "-t", "vllm-llama31-api:latest", "."],
            "group": "build",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "shared"
            },
            "problemMatcher": []
        },
        {
            "label": "Docker: Run",
            "type": "shell",
            "command": "docker",
            "args": [
                "run", 
                "-p", "8080:8080",
                "-e", "SPRING_PROFILES_ACTIVE=dev",
                "vllm-llama31-api:latest"
            ],
            "group": "build",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "shared"
            },
            "problemMatcher": [],
            "isBackground": true
        },
        {
            "label": "Docker Compose: Up",
            "type": "shell",
            "command": "docker-compose",
            "args": ["up", "-d"],
            "group": "build",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "shared"
            },
            "problemMatcher": []
        },
        {
            "label": "Docker Compose: Down",
            "type": "shell",
            "command": "docker-compose",
            "args": ["down"],
            "group": "build",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "shared"
            },
            "problemMatcher": []
        },
        {
            "label": "Start vLLM Server",
            "type": "shell",
            "command": "./start-vllm.sh",
            "group": "build",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "shared"
            },
            "problemMatcher": [],
            "isBackground": true
        },
        {
            "label": "Stop vLLM Server",
            "type": "shell",
            "command": "pkill",
            "args": ["-f", "vllm.entrypoints.openai.api_server"],
            "group": "build",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "shared"
            },
            "problemMatcher": []
        },
        {
            "label": "API Health Check",
            "type": "shell",
            "command": "curl",
            "args": ["-s", "http://localhost:8080/api/llm/health"],
            "group": "test",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "shared"
            },
            "problemMatcher": []
        },
        {
            "label": "vLLM Health Check",
            "type": "shell",
            "command": "curl",
            "args": ["-s", "http://localhost:8001/v1/models"],
            "group": "test",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "shared"
            },
            "problemMatcher": []
        }
    ]
}